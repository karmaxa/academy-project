name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CACHE_CUSTOM_KEY: 0
  DATABASE_URL: sqlite:///db.sqlite3
  POETRY_VERSION: 1.3.2
  
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🐍 Python runtime is set up.
        uses: actions/setup-python@v4
        with:
          architecture: 'x64'
          python-version: 3.11
#      - name: 🔑 Runtime cache key is calculated.
#        run: |
#          echo "RUNTIME_CACHE_KEY=runtime-ubuntu-${{ hashFiles('poetry.lock') }}-${{ env.CACHE_CUSTOM_KEY }}" >> $GITHUB_ENV
#      - name: 📦 Runtime is cached and restored.
#        id: cache-runtime
#        uses: actions/cache@v3
#        with:
#          key: ${{ env.RUNTIME_CACHE_KEY }}
#          path: |
#            ${{ env.pythonLocation }}
#            .artifacts/
      - name: 🔌 Poetry is installed.
        with:
          cache: 'poetry'

#        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
        run: |
          pip install poetry==${POETRY_VERSION}
          poetry install --with dev
#      - name: 🔋 Dependencies are installed.
#        if: ${{ !steps.cache-runtime.outputs.cache-hit }}
#        run: poetry install --with dev
      - name: 📊 Code check
        run: |
          poetry run black . --check
          poetry run isort . --check-only
          poetry run mypy
          poetry run flake8
